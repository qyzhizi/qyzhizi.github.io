<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>programming on log</title><link>/categories/programming/</link><description>Recent content in programming on log</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><lastBuildDate>Tue, 04 Jul 2023 17:06:31 +0800</lastBuildDate><atom:link href="/categories/programming/rss.xml" rel="self" type="application/rss+xml"/><item><title>PyTorch 实现 Opencv Canny 算法</title><link>/pytorch-implement-opencv-canny-algorithm.html</link><pubDate>Tue, 04 Jul 2023 17:06:31 +0800</pubDate><guid>/pytorch-implement-opencv-canny-algorithm.html</guid><description>&lt;div style="text-align: center;">
&lt;img src="https://qyzhizi.cn/img/202307041413380.png" style="width: 50%;">
&lt;/div></description></item><item><title>Opencv Canny 源码解析</title><link>/opencv-canny-source-code-analysis.html</link><pubDate>Mon, 03 Jul 2023 19:21:43 +0800</pubDate><guid>/opencv-canny-source-code-analysis.html</guid><description>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-c++" data-lang="c++">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">void&lt;/span> cv&lt;span style="color:#f92672">::&lt;/span>Canny( &lt;span style="color:#66d9ef">const&lt;/span> Mat&lt;span style="color:#f92672">&amp;amp;&lt;/span> image, Mat&lt;span style="color:#f92672">&amp;amp;&lt;/span> edges,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">double&lt;/span> threshold1, &lt;span style="color:#66d9ef">double&lt;/span> threshold2,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">int&lt;/span> apertureSize, &lt;span style="color:#66d9ef">bool&lt;/span> L2gradient )
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Mat src &lt;span style="color:#f92672">=&lt;/span> image;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> edges.create(src.size(), CV_8U);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> CvMat _src &lt;span style="color:#f92672">=&lt;/span> src, _dst &lt;span style="color:#f92672">=&lt;/span> edges;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> cvCanny( &lt;span style="color:#f92672">&amp;amp;&lt;/span>_src, &lt;span style="color:#f92672">&amp;amp;&lt;/span>_dst, threshold1, threshold2,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> apertureSize &lt;span style="color:#f92672">+&lt;/span> (L2gradient &lt;span style="color:#f92672">?&lt;/span> CV_CANNY_L2_GRADIENT : &lt;span style="color:#ae81ff">0&lt;/span>));
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>PyTorch DataLoader的工作机制</title><link>/pytorch-dataloader.html</link><pubDate>Fri, 23 Jun 2023 20:53:31 +0800</pubDate><guid>/pytorch-dataloader.html</guid><description>&lt;!-- vscode-markdown-toc -->
&lt;p>PyTorch-DataLoader的工作机制&lt;/p>
&lt;ul>
&lt;li>
&lt;a href="#datasetsampler-%e4%b8%8e-dataloader%e7%9a%84%e5%85%b3%e7%b3%bb" title="dataset、sampler 与 dataloader的关系？" >
dataset、sampler 与 dataloader的关系？
&lt;/a>&lt;/li>
&lt;li>
&lt;a href="#dataloaderpy-%e4%b8%bb%e8%bf%9b%e7%a8%8b%e4%b8%8e%e5%b7%a5%e4%bd%9c%e8%bf%9b%e7%a8%8b%e7%9a%84%e5%85%b3%e7%b3%bb" title="dataloader.py 主进程与工作进程的关系？" >
dataloader.py 主进程与工作进程的关系？
&lt;/a>&lt;/li>
&lt;li>
&lt;a href="#%e6%95%b0%e6%8d%ae%e6%97%b6%e5%a6%82%e4%bd%95%e4%bb%8e%e8%bf%ad%e4%bb%a3%e5%99%a8dataloaderiter%e8%bf%94%e5%9b%9e%e7%9a%84" title="数据时如何从迭代器DataLoaderIter返回的？" >
数据时如何从迭代器DataLoaderIter返回的？
&lt;/a>&lt;/li>
&lt;li>
&lt;a href="#dataloaderpy%e4%b8%ad%e4%b8%bb%e8%bf%9b%e7%a8%8b%e5%92%8c%e5%b7%a5%e4%bd%9c%e8%bf%9b%e7%a8%8b%e6%98%af%e4%bd%95%e6%97%b6%e5%88%87%e6%8d%a2%e7%9a%84%e4%bc%9a%e5%8f%91%e7%94%9f%e6%ad%bb%e9%94%81%e5%90%97" title="dataloader.py中主进程和工作进程是何时切换的？会发生死锁吗？" >
dataloader.py中主进程和工作进程是何时切换的？会发生死锁吗？
&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>阅读前提：&lt;/p>
&lt;ul>
&lt;li>了解 pytorch dataloader 的基本用法&lt;/li>
&lt;/ul></description></item><item><title>Pytorch卷积实现边缘检测</title><link>/pytorch-Edge-detection-using-convolution.html</link><pubDate>Fri, 23 Jun 2023 09:29:59 +0800</pubDate><guid>/pytorch-Edge-detection-using-convolution.html</guid><description>&lt;!-- &lt;img src="https://qyzhizi.cn/img/202306230824204.png" alt="图片" width="600" /> -->
&lt;div style="text-align: center;">
&lt;img src="https://qyzhizi.cn/img/202306230824204.png" alt="图片" width="600">
&lt;/div></description></item><item><title>Pytorch Api 实现直方图均衡化</title><link>/pytorch-api-implementing-histogram-equalization.html</link><pubDate>Fri, 23 Jun 2023 09:20:33 +0800</pubDate><guid>/pytorch-api-implementing-histogram-equalization.html</guid><description>&lt;p>pytorch-api-实现直方图均衡化&lt;/p>
&lt;!-- ![](https://qyzhizi.cn/img/202306230744649.png)
![](https://qyzhizi.cn/img/202306230744649.png) -->
&lt;div>
&lt;img src="https://qyzhizi.cn/img/202306230744649.png" style="display: inline-block; width: 49%;">
&lt;img src="https://qyzhizi.cn/img/202306230745540.png" style="display: inline-block; width: 49%;">
&lt;/div></description></item><item><title>转置卷积与卷积的理解</title><link>/post/trans-conv-and-conv.html</link><pubDate>Tue, 20 Jun 2023 08:09:46 +0800</pubDate><guid>/post/trans-conv-and-conv.html</guid><description>&lt;p>转置卷积与卷积的理解，本文将介绍：&lt;/p>
&lt;ul>
&lt;li>转置卷积含义与矩阵形式&lt;/li>
&lt;li>转置卷积的一种简单理解&lt;/li>
&lt;li>pytorch 转置卷积参数的理解及其Shape的公式推导&lt;/li>
&lt;li>卷积与数学上的卷积，卷积核旋转180度&lt;/li>
&lt;/ul>
&lt;p>阅读前提：&lt;/p>
&lt;ul>
&lt;li>理解深度学习中普通卷积的概念与shape的计算公式&lt;/li>
&lt;li>了解深度学习框架pytorch卷积api的调用&lt;/li>
&lt;li>了解卷积的矩阵运算形式&lt;/li>
&lt;/ul></description></item><item><title>vscode远程调试docker中的python服务</title><link>/post/vscode-remote-debugging-python-service.html</link><pubDate>Thu, 01 Jun 2023 22:32:52 +0800</pubDate><guid>/post/vscode-remote-debugging-python-service.html</guid><description>&lt;p>vscode远程调试docker中的python服务&lt;/p>
&lt;p>环境：windows Docker Desktop , Vscode&lt;/p>
&lt;p>&lt;strong>阅读前，默认你对以下内容有基本了解：docker-compose.yml, Dockerfile, Vscode python 调试配置, flask 服务&lt;/strong>&lt;/p>
&lt;p>原本想使用python pdb来调试，但是在容器环境中使用pdb，需要直接在容器终端中启动python程序，不方便
然后找到一个远程调试工具：debugpy，它将在容器中运行，等待vscode的连接（可配置等待模式），然后启动python程序。
配置好后就可以在vscode中调试容器中的python程序了。&lt;/p></description></item></channel></rss>